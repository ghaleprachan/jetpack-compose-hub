// Generated by Dagger (https://dagger.dev).
package app.prachang.dummy_data.di;

import app.prachang.dummy_data.data.dao.GmailDao;
import app.prachang.dummy_data.data.database.AppRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseDaoModule_ProvideGmailDaoFactory implements Factory<GmailDao> {
  private final Provider<AppRoomDatabase> dbProvider;

  public DatabaseDaoModule_ProvideGmailDaoFactory(Provider<AppRoomDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public GmailDao get() {
    return provideGmailDao(dbProvider.get());
  }

  public static DatabaseDaoModule_ProvideGmailDaoFactory create(
      Provider<AppRoomDatabase> dbProvider) {
    return new DatabaseDaoModule_ProvideGmailDaoFactory(dbProvider);
  }

  public static GmailDao provideGmailDao(AppRoomDatabase db) {
    return Preconditions.checkNotNullFromProvides(DatabaseDaoModule.INSTANCE.provideGmailDao(db));
  }
}
